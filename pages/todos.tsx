import type { NextPage } from "next";
import Head from "next/head";
import { Todo } from '../components/todo/todo';
import { AddTodo  } from "../components/todo/add-todo";
import styles from '../styles/Home.module.css'
import { useEffect, useRef, useState } from "react";
import { ITodo } from "../components/todo/todo.model";
import { TodoCount } from "../components/todo/todo-count";
import { Dialog } from "../components/dialog";
import { ITodoProps } from "../components/todo/todo";
import Link from "next/link";
import { Header } from '../components/header';

const Todos: NextPage = () => {
  const todosKey = 'My-Todos';
  const [todos, setTodos] = useState<ITodo[]>([]);
  const [isDialogOpen, setDialogOpen] = useState<boolean>(false);
  const selectedIndex = useRef<number>(-1);

  useEffect(() => {
    const myTodos = localStorage.getItem(todosKey)
    if (myTodos) {
      setTodos(JSON.parse(myTodos));
    }
  }, []);

  const setSelectedIndex = (index: number) => {
    selectedIndex.current = index;
  }

  const toggleDialog = () => {
    setDialogOpen(!isDialogOpen);
  }

  const saveTodos = (newTodos: ITodo[]) => {
    setTodos(newTodos);
    localStorage.setItem(todosKey, JSON.stringify(newTodos));
  }

  const addTodo = (newTodo: ITodo) => {
    const newTodos = [...todos, ...[newTodo]];
    saveTodos(newTodos);
  }

  const updateTodo = (updatedTodo: ITodo) => {
    if (selectedIndex.current == -1) return;
    const copy = [...todos];
    copy[selectedIndex.current] = updatedTodo;
    saveTodos(copy);
  }

  const deleteTodo = () => {
    if (selectedIndex.current === -1) return;
    const copy = [...todos];
    copy.splice(selectedIndex.current, 1);
    saveTodos(copy);
    setDialogOpen(!isDialogOpen);
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Todo</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Link href="/"><a><h2>Home &larr;</h2></a></Link>
        <div className={styles.grid}>
          <div className={styles.card}>
            <Header text="Todos" />
            <AddTodo addTodo={addTodo} />
            <TodoCount todos={todos}/>
            <div>
              {todos.map((todo, index) => {
                const todoProps: ITodoProps = { index, toggleDialog, todo, updateTodo, setSelectedIndex };
                return <Todo {...todoProps} key={todo.id}/>
              })}
            </div>
          </div>
        </div>
        <Dialog isOpen={isDialogOpen}>
          <div>Do you want to delete the `&quot;{todos[selectedIndex.current]?.text}`&quot; todo?</div>
          <div className={styles.dialogInputGroup} >
            <input className={styles.dialogInput} type="button" value="Yes" onClick={deleteTodo} />
            <input className={styles.dialogInput} type="button" value="No" onClick={toggleDialog} />
          </div>
        </Dialog>
      </main>
      <div>
        
      </div>
    </div>
  )
}

export default Todos;